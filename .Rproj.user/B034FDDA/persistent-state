build-last-errors="[]"
build-last-errors-base-dir="~/Downloads/easypwr/"
build-last-outputs="[{\"output\":\"==> devtools::document(roclets=c('rd', 'collate', 'namespace'))\\n\\n\",\"type\":0},{\"output\":\"Updating easypwr documentation\\nLoading easypwr\\n\",\"type\":2},{\"output\":\"Warning: @returns [Indicator.sorting.R#16]: unknown tag\\nWarning: @returns [Indicator.sorting.R#42]: unknown tag\\nWarning: @returns [Indicator.sorting.R#69]: unknown tag\\n\",\"type\":2},{\"output\":\"Warning: @returns [Solving.Plotting.R#62]: unknown tag\\nWarning: @returns [Solving.Plotting.R#107]: unknown tag\\n\",\"type\":2},{\"output\":\"Warning: @returns [Solving.Plotting.R#151]: unknown tag\\nWarning: @returns [Solving.Plotting.R#195]: unknown tag\\nWarning: @returns [Solving.Plotting.R#238]: unknown tag\\nWarning: @returns [analyze.variables.R#16]: unknown tag\\n\",\"type\":2},{\"output\":\"Warning: @returns [analyze.variables.R#41]: unknown tag\\nWarning: @returns [analyze.variables.R#66]: unknown tag\\n\",\"type\":2},{\"output\":\"Documentation completed\\n\\n\",\"type\":1},{\"output\":\"==> R CMD INSTALL --no-multiarch --with-keep.source easypwr\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/Users/jcmatei/Library/R/3.5/library’\\n\",\"type\":1},{\"output\":\"* installing *source* package ‘easypwr’ ...\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** byte-compile and prepare package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (easypwr)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="0"
saveActionState="0"
